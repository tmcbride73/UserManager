@page "/UserList"

@inject UserService UserService
@inject NavigationManager NavigationManager

<h3>User List</h3>

<TelerikButton OnClick="@(() => { CreateVisible = true; })">Create A User</TelerikButton>

<hr />

<TelerikGrid Data="@Users" Height="1020px"
             Pageable="true" Sortable="true" Groupable="true"
             FilterMode="Telerik.Blazor.GridFilterMode.FilterRow"
             Resizable="true" Reorderable="true" PageSize=16>
    <GridColumns>
        <GridColumn Field="@(nameof(User.SeqNum))" Title="" Width="200x" Filterable="false">
            <Template>
                <TelerikButton Icon="eye" OnClick="(x => ViewUserClicked((context as User).SeqNum))">View</TelerikButton>
                <TelerikButton Icon="edit" OnClick="(x => EditUserClicked((context as User).SeqNum))">Edit</TelerikButton>
            </Template>
        </GridColumn>
        <GridColumn Field="@(nameof(User.SeqNum))" Title="SeqNum" Width="200px" />
        <GridColumn Field="@(nameof(User.UserName))" Title="UserID" />
        <GridColumn Field="@(nameof(User.FirstName))" Title="First Name" />
        <GridColumn Field="@(nameof(User.LastName))" Title="Last Name" />
        <GridColumn Field="@(nameof(User.Activity))" Title="Activity" />
    </GridColumns>
</TelerikGrid>

<UserViewModal @bind-Visible="ViewVisible" OnEditClicked=@((x) => {ViewVisible = false; if(x)EditUserClicked(SelectedUserSeqNum);}) @bind-UserSeqNum="SelectedUserSeqNum"></UserViewModal>

<UserEditModal @bind-Visible="EditVisible" OnUserUpdated=@(async (x) => {if(x)await GetAllUsers();}) @bind-UserSeqNum="SelectedUserSeqNum"></UserEditModal>

<UserCreateModal @bind-Visible="CreateVisible" OnUserCreated=@(async (x) => {if(x)await GetAllUsers();})></UserCreateModal>

@code {

    public List<User> Users { get; set; }
    public long? SelectedUserSeqNum { get; set; }

    public bool CreateVisible { get; set; } = false;
    public bool ViewVisible { get; set; } = false;
    public bool EditVisible { get; set; } = false;

    protected override async Task OnInitializedAsync() {
        await GetAllUsers();
    }

    public async Task GetAllUsers()
    {
        Users = (await UserService.GetAllUsers()).ToList();
    }

    public void ViewUserClicked(long? seqNum)
    {
        SelectedUserSeqNum = seqNum;
        StateHasChanged();
        ViewVisible = true;
    }

    public void EditUserClicked(long? seqNum)
    {
        SelectedUserSeqNum = seqNum;
        StateHasChanged();
        EditVisible = true;
    }

}
